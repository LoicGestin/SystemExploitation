#ifndef TP1_IMAGE
#define TP1_IMAGE

/**
 * lecture d'une ligne de texte qui se termine par le caractere '\n'
 * les caracteres sont copies dans memoireDestination et le dernier caractere lue '\n' est ecrit comme '\0' dans memoireDestination
 * retourne la taille de la ligne lue; -1 en cas d'erreur ou si la taille de la ligne d√©passe tailleMax
 **/

int lectureLigne(int descripteurLecture, char *memoireDestination, int tailleMax);

/*
 * Cette fonction va lire un caractere et voir s'il est egale a '#' dans ce cas elle retourne une valeur differente de 0
 * Si le caractere n'est pas egal a '#' la fonction retourne 0 et recule la tete de lecture d'un caractere avec lseek.  
 */
int test_si_ligne_commentaire(int descripteurLecture);

/* avance la tete de lecture jusqu'a la lecture du caractere '\n' */
int avance_jusqua_nouvelle_ligne(int descripteurLecture);

/* lecture du magic number en ascii decimql jusqu'a la lecture du caractere '\n' */
int lecture_MagicNumber(int descripteurLecture);

/* lecture de largeur et longeur avance jusqu'a la lecture du caractere '\n'.
   les valeurs lues en ascii sont a convertir en int et a mettre dans largeur_ptr et longueur_ptr*/
int lecture_largeur_longueur(int descripteurLecture, int *largeur_ptr, int *longueur_ptr);

/* lecture du niveau de gris en ascii decimal jusqu'a la lecture du caractere '\n'.
la valeur convertie en int sera mise en niveau_gris_ptr */
int lecture_NiveauGris(int descripteurLecture, int *niveau_gris_ptr);

/*
 traitement de la section des donnees de l image
 */
int traitement_Contenu(int descripteurFichierEntree, int descripteurSortie);

void lecture_Commentaire(int descripteurFichierEntree);

extern const char *MAGIC_NUMBER_STRING;

int ecriture_NiveauGris(int descripteurFichierSortie);
int ecriture_largeur_longueur(int descripteurFichierSortie);
int ecriture_SPACE(int descripteur);
int ecriture_NL(int descripteur);
int ecriture_entier(int descripteur, int valeur);
int ecriture_MagicNumber(int descripteurFichierSortie);

#endif
